<?xml version="1.0" encoding="UTF-8" ?>
<Shell x:Class="MyIntrinsic.AppShell"
       xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:view="clr-namespace:MyIntrinsic.View"
       xmlns:pcView="clr-namespace:MyIntrinsic.Provisioning.View">

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle"
                   TargetType="Element">
                <Setter Property="Shell.BackgroundColor"
                        Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor"
                        Value="Gray" />
                <Setter Property="Shell.TitleColor"
                        Value="Black" />
                <Setter Property="Shell.DisabledColor"
                        Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor"
                        Value="{AppThemeBinding Dark=#95FFFFFF, Light=#95000000}" />
                <Setter Property="Shell.TabBarBackgroundColor"
                        Value="{AppThemeBinding Dark={StaticResource DarkBackground}, Light={StaticResource LightBackground}}" />
                <Setter Property="Shell.TabBarForegroundColor"
                        Value="{AppThemeBinding Dark={StaticResource LightBackground}, Light={StaticResource DarkBackground}}" />
                <Setter Property="Shell.TabBarUnselectedColor"
                        Value="{AppThemeBinding Dark=#95FFFFFF, Light=#95000000}" />
                <Setter Property="Shell.TabBarTitleColor"
                        Value="{AppThemeBinding Dark={StaticResource LightBackground}, Light={StaticResource DarkBackground}}" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}"
                   TargetType="ShellItem"
                   ApplyToDerivedTypes="True" />
        </ResourceDictionary>
    </Shell.Resources>

    <!--Skips over displaying any FlyoutItems when ShellItem is the first Element-->
    <ShellItem Route="LoginPage" Title="Login" Shell.FlyoutItemIsVisible="False">
        <ShellContent ContentTemplate="{DataTemplate view:LoginPage}" />
    </ShellItem>

    <!--<FlyoutItem Title="Chargers">
        <ShellContent Route="ChargersPage" ContentTemplate="{DataTemplate view:ChargersPage}" />
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="FAS"
                             Size="Title"
                             Color="{AppThemeBinding 
                                    Dark=White, 
                                    Light={StaticResource intrinsic-gray2}}"
                             Glyph="{StaticResource ChargingStation}"/>
        </FlyoutItem.Icon>
    </FlyoutItem>-->
    <FlyoutItem Title="Add New Charger">
        <ShellContent Route="SelectChargerView" ContentTemplate="{DataTemplate pcView:SelectChargerView}" FlyoutItemIsVisible="True"/>
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="FAS"
                             Size="Title"
                             Color="{AppThemeBinding 
                                    Dark=White, 
                                    Light={StaticResource intrinsic-gray2}}"
                             Glyph="{StaticResource ChargingStation}"/>
        </FlyoutItem.Icon>
    </FlyoutItem>
    <FlyoutItem Title="About">
            <ShellContent Route="AboutView" ContentTemplate="{DataTemplate view:AboutView}" FlyoutItemIsVisible="True"/>
        <FlyoutItem.Icon>
            <FontImageSource FontFamily="FAS"
                             Size="Title"
                             Color="{AppThemeBinding 
                                    Dark=White, 
                                    Light={StaticResource intrinsic-gray2}}"
                             Glyph="{StaticResource CircleInfo}"/>
        </FlyoutItem.Icon>
    </FlyoutItem>
  
    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem Text="Logout" Clicked="OnMenuItemClicked">
    </MenuItem>

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
   
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate view:LoginPage}" />
    </TabBar>-->

</Shell>
